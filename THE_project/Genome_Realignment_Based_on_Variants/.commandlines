// ---------------------- command line examples ----------------------

Note:
  If you find the commandlines too redundant, maybe a shell script will work well.
  But be aware that varsim needs to run under root.

Supposed directory structure:
  ../varsim:
    /varsim/data-files  (contains *.vcf *.fa *.txt and other files)
    /varsim/data-files/out_21  (contains simulated data)

Compilation:
  // "cd ..." into the source code directory where main.c is in

  // Compile
  gcc *.c -o main -lhts -lpthread

Simulation of data:
  // Copy main program to ../varsim/data-files

  // Extract part of the reference genome. At first this is designed for testing. But later I realized the program might run endlessly if you use all chroms at a time. So it's recommended to process them separately, and the same for variants.
  ./main --faFile hs37d5.fa --outputFile hs37d5_21.fa --extractChrom 21

  // Simulation (suppose you're under .../varsim):
  ./varsim.py --vc_in_vcf data-files/21_5_10Mb.vcf --sv_insert_seq data-files/insert_seq_21.txt \
--sv_dgv data-files/GRCh37_hg19_supportingvariants_21.txt --filter \
--reference data-files/hs37d5_21.fa --id simu --read_length 100 --vc_num_snp 5000 --vc_num_ins 3000 \
--vc_num_del 3000 --vc_num_mnp 1500 --vc_num_complex 1500 --sv_num_ins 1500 \
--sv_num_del 1500 --sv_num_dup 1000 --sv_num_inv 1000 --sv_percent_novel 0.01 \
--vc_percent_novel 0.01 --mean_fragment_size 350 --sd_fragment_size 50 \
--vc_min_length_lim 0 --vc_max_length_lim 49 --sv_min_length_lim 50 \
--sv_max_length_lim 50000 --nlanes 1 --total_coverage 2 \
--java_max_mem 20g \
--simulator_executable /bin/art_illumina --out_dir data-files/out_21 --log_dir log --work_dir work \
--simulator art

  // "cd ..." into the directory where generated files are
  cd data-files/out_21
  
  // Copy the reference file to the directory

  // Index the reference genome file for bwa
  bwa index hs37d5_21.fa

  // Use bwa mem to generate alignment results
  bwa mem -t 8 hs37d5_21.fa lane0.read1.fq.gz lane0.read2.fq.gz > simu.sam

  // Use this program to filter sam records with MAPQ <= 30
  ./main --samFile simu.sam --outputFile simu.filtered.sam --selectBadReads 30

  // Use samtools to sort the sam records
  samtools sort simu.filtered.sam -O SAM -o simu.filtered.sorted.sam

  // "cd ..." to the directory where vcf file that is used for generating simulated data is.

  // Extract the original header of the vcf file
  bcftools view -h 21_5_10Mb.vcf > 21_5_10Mb.vcf.header

  // Copy the generated header file to the directory of simulated data

  // Use "bcftools sort" to check contig. Add "##contig=<ID= ...>" manually if bcftools tells you it is not defined ... I didn't find other practical solutions
  bcftools sort simu.truth.vcf

  // Convert the format of files
  bcftools convert -Oz 21_5_10Mb.vcf.header -o 21_5_10Mb.vcf.header.gz
  bcftools convert -Oz simu.truth.vcf -o simu.truth.vcf.gz

  // Index converted files
  bcftools index 21_5_10Mb.vcf.header.gz
  bcftools index simu.truth.vcf.gz

  // Merge simulated data with extracted header
  bcftools merge 21_5_10Mb.vcf.header.gz simu.truth.vcf.gz -Ov -o merged.vcf

  // Sort the merged files
  bcftools sort merged.vcf -Ov -o merged.sorted.vcf

Test:
  (Either copy main to directory of simulated data or copy simulated data to directory of main)
  (The following commandlines suppose copying main to directory of simulated data)

  // Perform integration
  ./main --faFile hs37d5_21.fa --samFile simu.filtered.sorted.sam --vcfFile merged.sorted.vcf --sv_min_len 50 --sv_max_len 300 --match 1 --mismatch 4 --gapOpen 6 --gapExtension 1 --threads 4 --integrateVcfToSam 1

  // Merge re-alginment results
  samtools merge grbvOut.merged.sam grbvOut.sam.thread0 grbvOut.sam.thread1 grbvOut.sam.thread2 grbvOut.sam.thread3 -OSAM

  // Sort the merged results
  samtools sort grbvOut.merged.sam -OSAM -o grbvOut.merged.sorted.sam

Other commandlines for generating simulated data:
  art_illumina -p -sam -i test.fa -l 50 -f 20 -m 200 -s 10 -o test-paired_end // or use varsim to get simulated data

Other commandlines for simple operations:
  ./main --vcfFile data/merged.sorted.vcf --outputFile data/merged.sorted.vcf.statistics --sv_min_len 51 --statistics_vcf
