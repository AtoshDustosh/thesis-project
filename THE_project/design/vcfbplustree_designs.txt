1. How to locate position of the next pointer with input Key for the bplus tree?
	In the program, we used a binary search to locate the pointer according to the key. 

2. How to split an inner node with new record to be inserted?
	Suppose we have the inner node to be split, called "bpnode", and all information about the key and pointer to be inserted (inserted_key_idx, inserted_key, inserted_pointer_idx, inserted_pointer).
	Any inner node that can be split already contains #(RANK_INNER_NODE) pointers and #(RANK_INNER_NODE - 1) keys. And according to the bplus principles, we have inserted_key_idx + 1 == inserted_pointer_idx.
	Before splitting, we need to integrate all existing keys and pointers with the inserted key and pointer, like we do when splitting a leaf node.
	After integration of information, select the middle key as the one to be pushed up into the parent node.